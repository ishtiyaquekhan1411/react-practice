{"ast":null,"code":"var _jsxFileName = \"/home/deq/react-training/udemy/section-1/expense-item/src/components/NewExpense/NewExpenseForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { TITLE_REGEX, NUMBER_REGEX } from '../../constants';\nimport './NewExpenseForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewExpenseForm = props => {\n  _s();\n\n  const initialUserInput = {\n    enteredTitle: '',\n    enteredAmount: '',\n    enteredDate: '',\n    imageUrl: ''\n  };\n  const [userInput, setUserInput] = useState(initialUserInput);\n  const [userInputError, setuserInputError] = useState(initialUserInput);\n\n  const changeHandler = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUserInput(prevState => ({ ...prevState,\n      [name]: value\n    }));\n  };\n\n  const uploadImageHandler = async event => {\n    event.preventDefault();\n    const data = new FormData();\n    data.append('file', event.target.files[0]);\n    data.append('upload_preset', 'j0j1j50n');\n    data.append('cloud_name', 'dzjciizhx');\n    const response = await fetch(\"https://api.cloudinary.com/v1_1/dzjciizhx/image/upload\", {\n      method: 'POST',\n      body: data\n    });\n    const responseData = await response.json();\n    setUserInput(prevState => ({ ...prevState,\n      imageUrl: responseData.url\n    }));\n  };\n\n  const validateInput = () => {\n    const errors = initialUserInput;\n    Object.keys(userInput).forEach((key, value) => {\n      console.error('==============');\n      console.error(key);\n      console.log(value);\n      console.log(NUMBER_REGEX.test(value));\n\n      switch (key) {\n        case 'enteredTitle':\n          if (!TITLE_REGEX.test(value)) {\n            errors[key] = 'Invalid Title, Please correct it.';\n          }\n\n          break;\n\n        case 'enteredAmount':\n          if (!NUMBER_REGEX.test(value) || value === 0) {\n            console.error('============ test ===========');\n            errors[key] = 'Invalid or empty Amount Entered.';\n          }\n\n          break;\n      }\n\n      return errors;\n    });\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const errors = validateInput();\n    console.log(errors);\n    props.onSaveExpenseData({\n      title: userInput.enteredTitle,\n      amount: userInput.enteredAmount,\n      date: new Date(userInput.enteredDate),\n      url: userInput.imageUrl\n    });\n    setUserInput(initialUserInput);\n  };\n\n  console.log(userInput);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"title\",\n          value: userInput.enteredTitle,\n          name: \"enteredTitle\",\n          onChange: changeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"amount\",\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"amount\",\n          value: userInput.enteredAmount,\n          name: \"enteredAmount\",\n          min: \"0.01\",\n          step: \"0.01\",\n          onChange: changeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"date\",\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          id: \"date\",\n          min: \"2021-01-01\",\n          max: \"2022-12-31\",\n          value: userInput.enteredDate,\n          name: \"enteredDate\",\n          onChange: changeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-expense__image\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"new-expense__image-label\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              onChange: uploadImageHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-cloud-upload\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this), \" Attach Image\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewExpenseForm, \"QbBGOg6v74q7HePMXaQibq+z03w=\");\n\n_c = NewExpenseForm;\nexport default NewExpenseForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewExpenseForm\");","map":{"version":3,"sources":["/home/deq/react-training/udemy/section-1/expense-item/src/components/NewExpense/NewExpenseForm.js"],"names":["React","useState","TITLE_REGEX","NUMBER_REGEX","NewExpenseForm","props","initialUserInput","enteredTitle","enteredAmount","enteredDate","imageUrl","userInput","setUserInput","userInputError","setuserInputError","changeHandler","event","name","value","target","prevState","uploadImageHandler","preventDefault","data","FormData","append","files","response","fetch","method","body","responseData","json","url","validateInput","errors","Object","keys","forEach","key","console","error","log","test","submitHandler","onSaveExpenseData","title","amount","date","Date"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { TITLE_REGEX, NUMBER_REGEX } from '../../constants'\nimport './NewExpenseForm.css';\n\nconst NewExpenseForm = (props) => {\n  const initialUserInput = {\n    enteredTitle: '',\n    enteredAmount: '',\n    enteredDate: '',\n    imageUrl: ''\n  };\n\n  const [userInput, setUserInput] = useState(initialUserInput);\n  const [userInputError, setuserInputError] = useState(initialUserInput);\n\n  const changeHandler = (event) => {\n    const { name, value } = event.target;\n    setUserInput(prevState => ({ ...prevState, [name]: value }));\n  }\n\n  const uploadImageHandler = async (event) => {\n    event.preventDefault();\n\n    const data = new FormData();\n    data.append('file', event.target.files[0]);\n    data.append('upload_preset', 'j0j1j50n');\n    data.append('cloud_name', 'dzjciizhx');\n    const response = await fetch(\"https://api.cloudinary.com/v1_1/dzjciizhx/image/upload\", {\n      method: 'POST',\n      body: data\n    });\n    const responseData = await response.json();\n    setUserInput(prevState => ({ ...prevState, imageUrl: responseData.url }));\n  }\n  \n  const validateInput = () => {\n    const errors = initialUserInput;\n    Object.keys(userInput).forEach((key, value) => {\n      console.error('==============');\n      console.error(key);\n      console.log(value);\n      console.log(NUMBER_REGEX.test(value));\n      switch (key) {\n        case 'enteredTitle':\n          if (!TITLE_REGEX.test(value)) {\n            errors[key] = 'Invalid Title, Please correct it.'\n          }\n          break;\n        case 'enteredAmount':\n          if (!NUMBER_REGEX.test(value) || value === 0) {\n            console.error('============ test ===========')\n            errors[key] = 'Invalid or empty Amount Entered.';\n          }\n          break;\n\n      }\n      return errors;\n    })\n  }\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    const errors = validateInput();\n    console.log(errors);\n    props.onSaveExpenseData({\n      title: userInput.enteredTitle,\n      amount: userInput.enteredAmount,\n      date: new Date(userInput.enteredDate),\n      url: userInput.imageUrl\n    });\n    setUserInput(initialUserInput);\n  }\n\n  console.log(userInput);\n  return (\n    <form onSubmit={submitHandler}>\n      <div className='new-expense__controls'>\n        <div className='new-expense__control'>\n          <label htmlFor='title'>Title</label>\n          <input\n            type='text'\n            id='title'\n            value={userInput.enteredTitle}\n            name='enteredTitle'\n            onChange={changeHandler}\n          />\n        </div>\n        <div className='new-expense__control'>\n          <label htmlFor='amount'>Amount</label>\n          <input\n            type='number'\n            id='amount'\n            value={userInput.enteredAmount}\n            name='enteredAmount'\n            min='0.01'\n            step='0.01'\n            onChange={changeHandler}\n          />\n        </div>\n        <div className='new-expense__control'>\n         <label htmlFor='date'>Date</label>\n          <input\n            type='date'\n            id='date'\n            min='2021-01-01'\n            max='2022-12-31'\n            value={userInput.enteredDate}\n            name='enteredDate'\n            onChange={changeHandler}\n          />\n        </div>\n        <div className='new-expense__control'>\n          <div className='new-expense__image'>\n            <label className=\"new-expense__image-label\">\n              <input type=\"file\" onChange={uploadImageHandler} />\n              <i className=\"fa fa-cloud-upload\" /> Attach Image\n            </label>\n          </div>\n        </div>\n      </div>\n      <div className='new-expense__actions'>\n        <button type='submit'>Add Expense</button>\n      </div>\n    </form>\n  ) \n}\n\nexport default NewExpenseForm;"]},"metadata":{},"sourceType":"module"}