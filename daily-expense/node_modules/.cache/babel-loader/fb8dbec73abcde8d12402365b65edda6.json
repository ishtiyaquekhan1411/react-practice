{"ast":null,"code":"var _jsxFileName = \"/home/deq/react-training/udemy/section-1/expense-item/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Expenses from './components/Expenses/Expenses';\nimport ExpenseForm from './components/Expense/ExpenseForm';\nimport { EXPENSES } from './constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [expenses, setExpenses] = useState(EXPENSES);\n  const [currentExpense, setCurrentExpense] = useState({});\n\n  const addUpdateExpenseHandler = expense => {\n    setExpenses(prevState => [...prevState, expense]);\n    setCurrentExpense({});\n  };\n\n  const removeExpenseHandler = expenseId => {\n    const updatedExpenses = expenses.filter(expense => expense.id !== expenseId);\n    setExpenses([...updatedExpenses]);\n  };\n\n  const editExpenseHandler = expenseId => {\n    const currentExpense = expenses.find(expense => expense.id === expenseId);\n    setCurrentExpense(currentExpense);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ExpenseForm, {\n      onAddUpdateExpense: addUpdateExpenseHandler,\n      expense: currentExpense\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Expenses, {\n      items: expenses,\n      onRemoveExpenseData: removeExpenseHandler,\n      onEditExpenseData: editExpenseHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"jTcSkGASq5xseT4+6I37zTaZ8lE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/deq/react-training/udemy/section-1/expense-item/src/App.js"],"names":["React","useState","Expenses","ExpenseForm","EXPENSES","App","expenses","setExpenses","currentExpense","setCurrentExpense","addUpdateExpenseHandler","expense","prevState","removeExpenseHandler","expenseId","updatedExpenses","filter","id","editExpenseHandler","find"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,WAAP,MAAwB,kCAAxB;AACA,SAASC,QAAT,QAAyB,aAAzB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAACG,QAAD,CAAxC;AACA,QAAM,CAACI,cAAD,EAAiBC,iBAAjB,IAAsCR,QAAQ,CAAC,EAAD,CAApD;;AAEA,QAAMS,uBAAuB,GAAIC,OAAD,IAAa;AAC3CJ,IAAAA,WAAW,CAACK,SAAS,IAAK,CAAC,GAAGA,SAAJ,EAAeD,OAAf,CAAf,CAAX;AACAF,IAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACD,GAHD;;AAKA,QAAMI,oBAAoB,GAAIC,SAAD,IAAe;AAC1C,UAAMC,eAAe,GAAGT,QAAQ,CAACU,MAAT,CAAiBL,OAAD,IAAaA,OAAO,CAACM,EAAR,KAAeH,SAA5C,CAAxB;AACAP,IAAAA,WAAW,CAAC,CAAC,GAAGQ,eAAJ,CAAD,CAAX;AACD,GAHD;;AAKA,QAAMG,kBAAkB,GAAIJ,SAAD,IAAe;AACxC,UAAMN,cAAc,GAAGF,QAAQ,CAACa,IAAT,CAAeR,OAAD,IAAaA,OAAO,CAACM,EAAR,KAAeH,SAA1C,CAAvB;AACAL,IAAAA,iBAAiB,CAACD,cAAD,CAAjB;AACD,GAHD;;AAKA,sBACE;AAAA,4BACE,QAAC,WAAD;AAAa,MAAA,kBAAkB,EAAEE,uBAAjC;AAA0D,MAAA,OAAO,EAAEF;AAAnE;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,QAAD;AACE,MAAA,KAAK,EAAEF,QADT;AAEE,MAAA,mBAAmB,EAAEO,oBAFvB;AAGE,MAAA,iBAAiB,EAAEK;AAHrB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CA7BD;;GAAMb,G;;KAAAA,G;AA+BN,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react';\n\nimport Expenses from './components/Expenses/Expenses';\nimport ExpenseForm from './components/Expense/ExpenseForm';\nimport { EXPENSES } from './constants';\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(EXPENSES);\n  const [currentExpense, setCurrentExpense] = useState({});\n\n  const addUpdateExpenseHandler = (expense) => {\n    setExpenses(prevState => ([...prevState, expense]));\n    setCurrentExpense({});\n  };\n\n  const removeExpenseHandler = (expenseId) => {\n    const updatedExpenses = expenses.filter((expense) => expense.id !== expenseId);\n    setExpenses([...updatedExpenses]);\n  };\n\n  const editExpenseHandler = (expenseId) => {\n    const currentExpense = expenses.find((expense) => expense.id === expenseId);\n    setCurrentExpense(currentExpense);\n  }\n\n  return (\n    <div>\n      <ExpenseForm onAddUpdateExpense={addUpdateExpenseHandler} expense={currentExpense} />\n      <Expenses\n        items={expenses}\n        onRemoveExpenseData={removeExpenseHandler}\n        onEditExpenseData={editExpenseHandler}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}