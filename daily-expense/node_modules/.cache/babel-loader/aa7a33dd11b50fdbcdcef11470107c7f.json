{"ast":null,"code":"var _jsxFileName = \"/home/deq/react-training/udemy/section-1/expense-item/src/components/Expense/ExpenseForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { TITLE_REGEX, NUMBER_REGEX } from '../../constants';\nimport Card from '../UI/Card';\nimport './ExpenseForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpenseForm = props => {\n  _s();\n\n  console.log(props.expense);\n  const initialUserInput = {\n    enteredTitle: '',\n    enteredAmount: '',\n    enteredDate: '',\n    imageUrl: ''\n  };\n  const [userInput, setUserInput] = useState(initialUserInput);\n  const [userInputError, setuserInputError] = useState(initialUserInput);\n  useEffect(() => {\n    if (props.expense.id) {\n      setUserInput({\n        enteredTitle: props.expense.title,\n        enteredAmount: props.expense.amount,\n        enteredDate: props.expense.date.toISOString().slice(0, 10),\n        imageUrl: props.expense.url\n      });\n    }\n  }, [props.expense]);\n\n  const changeHandler = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUserInput(prevState => ({ ...prevState,\n      [name]: value\n    }));\n  };\n\n  const uploadImageHandler = async event => {\n    event.preventDefault();\n    const data = new FormData();\n    data.append('file', event.target.files[0]);\n    data.append('upload_preset', 'j0j1j50n');\n    data.append('cloud_name', 'dzjciizhx');\n    const response = await fetch(\"https://api.cloudinary.com/v1_1/dzjciizhx/image/upload\", {\n      method: 'POST',\n      body: data\n    });\n    const responseData = await response.json();\n    setUserInput(prevState => ({ ...prevState,\n      imageUrl: responseData.url\n    }));\n  };\n\n  const validateInput = () => {\n    const errors = { ...initialUserInput\n    };\n    Object.keys(errors).forEach(key => {\n      switch (key) {\n        case 'enteredTitle':\n          if (!TITLE_REGEX.test(userInput.enteredTitle)) {\n            errors[key] = 'Invalid Title.';\n          }\n\n          break;\n\n        case 'enteredAmount':\n          if (!NUMBER_REGEX.test(userInput.enteredAmount)) {\n            errors[key] = 'Invalid Amount.';\n          }\n\n          break;\n\n        case 'enteredDate':\n          if (isNaN(Date.parse(userInput.enteredDate))) {\n            errors[key] = 'Invalid date';\n          }\n\n          break;\n\n        default:\n          errors[key] = '';\n      }\n    });\n    return errors;\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const errors = validateInput();\n    const isValidSubmission = Object.values(errors).every(value => value === '');\n\n    if (isValidSubmission) {\n      const expenseData = {\n        title: userInput.enteredTitle,\n        amount: userInput.enteredAmount,\n        date: new Date(userInput.enteredDate),\n        url: userInput.imageUrl,\n        id: props.expense.id || Math.random().toString()\n      };\n      props.onAddEditExpense(expenseData);\n      setUserInput(initialUserInput);\n      setuserInputError(initialUserInput);\n    } else {\n      setuserInputError(errors);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"expense\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"expense__controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"expense__control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"title\",\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: userInputError.enteredTitle && 'expense__input_error',\n            type: \"text\",\n            id: \"title\",\n            value: userInput.enteredTitle,\n            name: \"enteredTitle\",\n            onChange: changeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), userInputError.enteredTitle && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: userInputError.enteredTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 46\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"expense__control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"amount\",\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: userInputError.enteredAmount && 'expense__input_error',\n            type: \"number\",\n            id: \"amount\",\n            value: userInput.enteredAmount,\n            name: \"enteredAmount\",\n            min: \"0.01\",\n            step: \"0.01\",\n            onChange: changeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), userInputError.enteredAmount && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: userInputError.enteredAmount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 47\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"expense__control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"date\",\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: userInputError.enteredDate && 'expense__input_error',\n            type: \"date\",\n            id: \"date\",\n            min: \"2021-01-01\",\n            max: \"2022-12-31\",\n            value: userInput.enteredDate,\n            name: \"enteredDate\",\n            onChange: changeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), userInputError.enteredDate && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: userInputError.enteredDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"expense__control\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"expense__image\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"expense__image-label\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"expense__input_error\",\n                type: \"file\",\n                onChange: uploadImageHandler\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa fa-cloud-upload\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 17\n              }, this), \" Attach Image\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"expense__actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: props.expense.id ? 'Update Expense' : 'Add Expense'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ExpenseForm, \"N9u2n9LVQYpriZCtCwgXYdgJJsE=\");\n\n_c = ExpenseForm;\nexport default ExpenseForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"sources":["/home/deq/react-training/udemy/section-1/expense-item/src/components/Expense/ExpenseForm.js"],"names":["React","useState","useEffect","TITLE_REGEX","NUMBER_REGEX","Card","ExpenseForm","props","console","log","expense","initialUserInput","enteredTitle","enteredAmount","enteredDate","imageUrl","userInput","setUserInput","userInputError","setuserInputError","id","title","amount","date","toISOString","slice","url","changeHandler","event","name","value","target","prevState","uploadImageHandler","preventDefault","data","FormData","append","files","response","fetch","method","body","responseData","json","validateInput","errors","Object","keys","forEach","key","test","isNaN","Date","parse","submitHandler","isValidSubmission","values","every","expenseData","Math","random","toString","onAddEditExpense"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { TITLE_REGEX, NUMBER_REGEX } from '../../constants'\nimport Card from '../UI/Card';\nimport './ExpenseForm.css';\n\nconst ExpenseForm = (props) => {\n  console.log(props.expense);\n\n  const initialUserInput = {\n    enteredTitle: '',\n    enteredAmount: '',\n    enteredDate: '',\n    imageUrl: ''\n  };\n\n  const [userInput, setUserInput] = useState(initialUserInput);\n  const [userInputError, setuserInputError] = useState(initialUserInput);\n\n  useEffect(() => {\n    if (props.expense.id) {\n      setUserInput({\n        enteredTitle: props.expense.title,\n        enteredAmount: props.expense.amount,\n        enteredDate: props.expense.date.toISOString().slice(0, 10),\n        imageUrl: props.expense.url\n      })\n    }\n  }, [props.expense])\n\n  const changeHandler = (event) => {\n    const { name, value } = event.target;\n    setUserInput(prevState => ({ ...prevState, [name]: value }));\n  }\n\n  const uploadImageHandler = async (event) => {\n    event.preventDefault();\n\n    const data = new FormData();\n    data.append('file', event.target.files[0]);\n    data.append('upload_preset', 'j0j1j50n');\n    data.append('cloud_name', 'dzjciizhx');\n    const response = await fetch(\"https://api.cloudinary.com/v1_1/dzjciizhx/image/upload\", {\n      method: 'POST',\n      body: data\n    });\n    const responseData = await response.json();\n    setUserInput(prevState => ({ ...prevState, imageUrl: responseData.url }));\n  }\n  \n  const validateInput = () => {\n    const errors = {...initialUserInput};\n    Object.keys(errors).forEach((key) => {\n      switch (key) {\n        case 'enteredTitle':\n          if (!TITLE_REGEX.test(userInput.enteredTitle)) {\n            errors[key] = 'Invalid Title.'\n          }\n          break;\n        case 'enteredAmount':\n          if (!NUMBER_REGEX.test(userInput.enteredAmount)) {\n            errors[key] = 'Invalid Amount.';\n          }\n          break;\n        case 'enteredDate':\n          if (isNaN(Date.parse(userInput.enteredDate))) {\n            errors[key] = 'Invalid date';\n          }\n          break;\n        default:\n          errors[key] = '';\n      }\n    })\n    return errors;\n  }\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    const errors = validateInput();\n    const isValidSubmission = Object.values(errors).every(value => value === '');\n    if (isValidSubmission) {\n      const expenseData = {\n        title: userInput.enteredTitle,\n        amount: userInput.enteredAmount,\n        date: new Date(userInput.enteredDate),\n        url: userInput.imageUrl,\n        id: props.expense.id || Math.random().toString()\n      }\n      props.onAddEditExpense(expenseData);\n      setUserInput(initialUserInput);\n      setuserInputError(initialUserInput);\n    } else {\n      setuserInputError(errors);\n    }\n  }\n\n  return (\n    <Card className='expense'>\n      <form onSubmit={submitHandler}>\n        <div className='expense__controls'>\n          <div className='expense__control'>\n            <label htmlFor='title'>Title</label>\n            <input\n              className={ userInputError.enteredTitle && 'expense__input_error'}\n              type='text'\n              id='title'\n              value={userInput.enteredTitle}\n              name='enteredTitle'\n              onChange={changeHandler}\n            />\n            {\n              userInputError.enteredTitle && <span>{userInputError.enteredTitle}</span>\n            }\n          </div>\n          <div className='expense__control'>\n            <label htmlFor='amount'>Amount</label>\n            <input\n              className={ userInputError.enteredAmount && 'expense__input_error'}\n              type='number'\n              id='amount'\n              value={userInput.enteredAmount}\n              name='enteredAmount'\n              min='0.01'\n              step='0.01'\n              onChange={changeHandler}\n            />\n            {\n              userInputError.enteredAmount && <span>{userInputError.enteredAmount}</span>\n            }\n          </div>\n          <div className='expense__control'>\n          <label htmlFor='date'>Date</label>\n            <input\n              className={ userInputError.enteredDate && 'expense__input_error'}\n              type='date'\n              id='date'\n              min='2021-01-01'\n              max='2022-12-31'\n              value={userInput.enteredDate}\n              name='enteredDate'\n              onChange={changeHandler}\n            />\n            {\n              userInputError.enteredDate && <span>{userInputError.enteredDate}</span>\n            }\n          </div>\n          <div className='expense__control'>\n            <div className='expense__image'>\n              <label className=\"expense__image-label\">\n                <input className=\"expense__input_error\" type=\"file\" onChange={uploadImageHandler} />\n                <i className=\"fa fa-cloud-upload\" /> Attach Image\n              </label>\n            </div>\n          </div>\n        </div>\n        <div className='expense__actions'>\n          <button type='submit'>{props.expense.id ? 'Update Expense' : 'Add Expense'}</button>\n        </div>\n      </form>\n    </Card>\n  ) \n}\n\nexport default ExpenseForm;"]},"metadata":{},"sourceType":"module"}